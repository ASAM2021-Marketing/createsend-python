{"google":"","tagline":"A python library for v3 of the createsend API","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"createsend-python","body":"# createsend [![Build Status](https://secure.travis-ci.org/campaignmonitor/createsend-python.png)][travis]\r\nA python library which implements the complete functionality of v3 of the [Campaign Monitor API](http://www.campaignmonitor.com/api/).\r\n\r\n[travis]: http://travis-ci.org/campaignmonitor/createsend-python\r\n\r\n## Installation\r\n\r\n    pip install createsend\r\n\r\n## Examples\r\n\r\n### Basic usage\r\nRetrieve a list of all your clients.\r\n\r\n    from createsend import *\r\n    \r\n    CreateSend.api_key = 'your_api_key'\r\n\r\n    cs = CreateSend()\r\n    clients = cs.clients()\r\n    \r\n    for c in clients:\r\n      print \"%s: %s\" % (c.ClientID, c.Name)\r\n\r\nResults in:\r\n\r\n    4a397ccaaa55eb4e6aa1221e1e2d7122: Client One\r\n    a206def0582eec7dae47d937a4109cb2: Client Two\r\n\r\n### Handling errors\r\nIf the createsend API returns an error, an exception will be thrown. For example, if you attempt to create a campaign and enter empty values for subject etc:\r\n\r\n    from createsend import *\r\n\r\n    CreateSend.api_key = 'your_api_key'\r\n\r\n    try:\r\n      cl = Client(\"4a397ccaaa55eb4e6aa1221e1e2d7122\")\r\n      id = Campaign().create(cl.client_id, \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [])\r\n      print \"New campaign ID: %s\" % id\r\n    except BadRequest as br:\r\n      print \"Bad request error: %s\" % br\r\n      print \"Error Code:    %s\" % br.data.Code\r\n      print \"Error Message: %s\" % br.data.Message\r\n    except Exception as e:\r\n      print \"Error: %s\" % e\r\n\r\nResults in:\r\n\r\n    Bad request error: The CreateSend API responded with the following error - 304: Campaign Subject Required\r\n    Error Code:    304\r\n    Error Message: Campaign Subject Required\r\n\r\n### Expected input and output\r\nThe best way of finding out the expected input and output of a particular method in a particular class is to use the unit tests as a reference.\r\n\r\nFor example, if you wanted to find out how to call the Subscriber.add() method, you would look at the file test/test_subscriber.py\r\n\r\n    def test_add_with_custom_fields(self):\r\n      self.subscriber.stub_request(\"subscribers/%s.json\" % self.list_id, \"add_subscriber.json\")\r\n      custom_fields = [ { \"Key\": 'website', \"Value\": 'http://example.com/' } ]\r\n      email_address = self.subscriber.add(self.list_id, \"subscriber@example.com\", \"Subscriber\", custom_fields, True)\r\n      self.assertEquals(email_address, \"subscriber@example.com\")\r\n"}